name: Unit Tests

# This workflow will run for pull requests that are opened or updated with new commits, as well as when
# commits are pushed directly to the master or develop branches (including when pull requests are merged).
#
# The `build-and-test` job will run every time the workflow does.

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [master, develop]

jobs:
  build-and-test:
    runs-on: macOS-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Cache Derived Data
      id: cache-derived-data
      uses: actions/cache@v2
      with:
        path: |
          "${GITHUB_WORKSPACE}/../DerivedDataSwift"
          "${GITHUB_WORKSPACE}/../DerivedDataXcode"
        key: ${{ runner.os }}-derived-data

    - name: Run Tests
      run: |
        DEVELOPER_PATH=$(xcode-select --print-path)
        PLATFORM=$(ls -1 "${DEVELOPER_PATH}/Platforms/iPhoneOS.platform/DeviceSupport/" | sort -gr | head -n 1)
        DEVICE=$(xcrun simctl list devices "iOS ${PLATFORM}" | grep "iPhone" | head -n 1 | sed -Ee 's/^.*\(([A-Z0-9\-]+)\).*$/\1/g')

        xcodebuild test \
          -workspace "Package.xcworkspace" \
          -scheme "Zone5" \
          -destination "platform=iOS Simulator,id=${DEVICE}" \
          -enableCodeCoverage YES \
          -derivedDataPath "${GITHUB_WORKSPACE}/../DerivedDataSwift" \
          -resultBundlePath "SwiftPackage" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGN_IDENTITY=""

        xcodebuild test \
          -project "Zone5.xcodeproj" \
          -scheme "Zone5" \
          -destination "platform=iOS Simulator,id=${DEVICE}" \
          -enableCodeCoverage YES \
          -derivedDataPath "${GITHUB_WORKSPACE}/../DerivedDataXcode" \
          -resultBundlePath "XcodeProject" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGN_IDENTITY=""

    - name: Capture Results
      if: success() || failure()
      uses: kishikawakatsumi/xcresulttool@v1.3.1
      with:
        path: |
          XcodeProject.xcresult
          SwiftPackage.xcresult
        show-passed-tests: false
        show-code-coverage: false

    - name: Merge Profile Data
      run: |
        PROFDATA_INPUT="${GITHUB_WORKSPACE}/../DerivedDataSwift/Build/ProfileData/*/*.profdata"
        PROFDATA_OUTPUT="${GITHUB_WORKSPACE}/merged.profdata"
        COVERAGE_OUTPUT="${GITHUB_WORKSPACE}/merged.lcov"
        PRODUCTS_PATH="${GITHUB_WORKSPACE}/../DerivedDataSwift/Build/Products"

        xcrun llvm-profdata merge ${PROFDATA_INPUT[@]} -output "${PROFDATA_OUTPUT}"

        while IFS= read -r BINARY_PATH; do
            (xcrun --run llvm-cov show "${BINARY_PATH}" --instr-profile "${PROFDATA_OUTPUT}") >> "${COVERAGE_OUTPUT}" || true
        done <<< "$(find "${PRODUCTS_PATH}" -type f -name "*.o")"

    - name: Capture Coverage Map
      uses: actions/upload-artifact@v2
      with:
        name: Coverage.lcov
        path: merged.lcov
        if-no-files-found: warn

    - name: Select Java Release
      uses: actions/setup-java@v2
      with:
        distribution: "adopt"
        java-version: "11"

    - name: Install Sonar Scanner
      run: brew install sonar-scanner

    - name: SonarCloud (Push)
      if: ${{ github.event_name == 'push' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        sonar-scanner \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.organization=todaysplan \
          -Dsonar.projectKey=z5-sdk-swift \
          -Dsonar.login=${SONAR_TOKEN} \
          -Dsonar.sources=. \
          -Dsonar.swift.coverage.reportPaths="${GITHUB_WORKSPACE}/merged.lcov" \
          -Dsonar.cfamily.build-wrapper-output.bypass=true \
          -Dsonar.c.file.suffixes=- \
          -Dsonar.cpp.file.suffixes=- \
          -Dsonar.objc.file.suffixes=- \

    - name: SonarCloud (Pull Request)
      if: ${{ github.event_name == 'pull_request' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        PR_BRANCH: ${{ github.event.pull_request.head.ref }}
        PR_KEY: ${{ github.event.pull_request.number }}
        PR_BASE: ${{ github.event.pull_request.base.ref }}
      run: |
        sonar-scanner \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.organization=todaysplan \
          -Dsonar.projectKey=z5-sdk-swift \
          -Dsonar.login=${SONAR_TOKEN} \
          -Dsonar.sources=. \
          -Dsonar.swift.coverage.reportPaths="${GITHUB_WORKSPACE}/merged.lcov" \
          -Dsonar.cfamily.build-wrapper-output.bypass=true \
          -Dsonar.c.file.suffixes=- \
          -Dsonar.cpp.file.suffixes=- \
          -Dsonar.objc.file.suffixes=- \
          -Dsonar.pullrequest.branch="${PR_BRANCH}" \
          -Dsonar.pullrequest.key="${PR_KEY}" \
          -Dsonar.pullrequest.base="${PR_BASE}" \
          -Dsonar.pullrequest.provider="GitHub" \
          -Dsonar.pullrequest.github.repository="${GITHUB_REPOSITORY}" \
          -Dsonar.pullrequest.github.endpoint="${GITHUB_API_URL}" \
          -Dsonar.pullrequest.github.summary_comment=true
